{"ast":null,"code":"export const clearCells = props => {\n  if (props.state.isCleaned === true) {\n    return;\n  }\n  const empty = [[\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]];\n  const history = props.state.history.slice();\n  history.push(empty);\n  props.state.historyCount = props.state.historyCount + 1;\n  props.setState({\n    squares: empty,\n    history: history,\n    idEdit: true,\n    isCleaned: true\n  });\n};","map":{"version":3,"names":["clearCells","props","state","isCleaned","empty","history","slice","push","historyCount","setState","squares","idEdit"],"sources":["/Users/hatanoriku/shots/othello/src/ClearCells.tsx"],"sourcesContent":["import react from \"react\";\n\nexport const clearCells = (props: any) => {\n    if (props.state.isCleaned === true) {\n        return\n    }\n    const empty = [\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]\n    ]\n    const history = props.state.history.slice()\n    history.push(empty)\n    props.state.historyCount = props.state.historyCount + 1\n    props.setState({\n        squares: empty,\n        history: history,     \n        idEdit: true,\n        isCleaned: true   \n    })\n}"],"mappings":"AAEA,OAAO,MAAMA,UAAU,GAAIC,KAAU,IAAK;EACtC,IAAIA,KAAK,CAACC,KAAK,CAACC,SAAS,KAAK,IAAI,EAAE;IAChC;EACJ;EACA,MAAMC,KAAK,GAAG,CACV,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAC3C;EACD,MAAMC,OAAO,GAAGJ,KAAK,CAACC,KAAK,CAACG,OAAO,CAACC,KAAK,EAAE;EAC3CD,OAAO,CAACE,IAAI,CAACH,KAAK,CAAC;EACnBH,KAAK,CAACC,KAAK,CAACM,YAAY,GAAGP,KAAK,CAACC,KAAK,CAACM,YAAY,GAAG,CAAC;EACvDP,KAAK,CAACQ,QAAQ,CAAC;IACXC,OAAO,EAAEN,KAAK;IACdC,OAAO,EAAEA,OAAO;IAChBM,MAAM,EAAE,IAAI;IACZR,SAAS,EAAE;EACf,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}