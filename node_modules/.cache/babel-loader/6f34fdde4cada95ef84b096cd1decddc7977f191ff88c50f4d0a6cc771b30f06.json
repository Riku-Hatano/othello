{"ast":null,"code":"export const switchToPubBlackMode = props => {\n  console.log(\"put black1\");\n  props.setState({\n    isEdit: 1\n  });\n};\nexport const putBlack2 = (cell1, cell2, props) => {\n  if (props.state.squares[cell1][cell2] !== \" \") {\n    return;\n  }\n  const board = JSON.parse(JSON.stringify(props.state.squares));\n  let history = props.state.history;\n  let historyCount = props.state.historyCount;\n  board[cell1][cell2] = \"B\";\n  historyCount = historyCount + 1;\n  history.push(board);\n  props.setState({\n    squares: board,\n    historyCount: historyCount,\n    history: history\n  });\n  console.log(history);\n  console.log(historyCount);\n};\nexport const switchToPutWhiteMode = props => {\n  props.setState({\n    isEdit: 2\n  });\n};\nexport const putWhite2 = (cell1, cell2, props) => {\n  if (props.state.squares[cell1][cell2] !== \" \") {\n    return;\n  }\n  const board = JSON.parse(JSON.stringify(props.state.squares));\n  let history = props.state.history;\n  let historyCount = props.state.historyCount;\n  board[cell1][cell2] = \"W\";\n  historyCount = historyCount + 1;\n  history.push(board);\n  props.setState({\n    squares: board,\n    historyCount: historyCount,\n    history: history\n  });\n  console.log(history);\n  console.log(historyCount);\n};\nexport const completeEdit = props => {\n  props.setState({\n    isEdit: 0\n  });\n};","map":{"version":3,"names":["switchToPubBlackMode","props","console","log","setState","isEdit","putBlack2","cell1","cell2","state","squares","board","JSON","parse","stringify","history","historyCount","push","switchToPutWhiteMode","putWhite2","completeEdit"],"sources":["/Users/hatanoriku/go/src/othello/src/EditBoard.tsx"],"sourcesContent":["export const switchToPubBlackMode = (props: any) => {\n    console.log(\"put black1\")\n    props.setState({\n        isEdit: 1\n    })\n}\n\nexport const putBlack2 = (cell1: number, cell2: number, props: any) => {\n    if (props.state.squares[cell1][cell2] !== \" \") {\n        return\n    }\n    const board = JSON.parse(JSON.stringify(props.state.squares))\n    let history = props.state.history\n    let historyCount: number = props.state.historyCount\n\n    board[cell1][cell2] = \"B\"\n    historyCount = historyCount + 1;\n    history.push(board)\n\n    props.setState({\n        squares: board,\n        historyCount: historyCount,\n        history: history\n    })\n    console.log(history)\n    console.log(historyCount)\n}\n\nexport const switchToPutWhiteMode = (props: any) => {\n    props.setState({\n        isEdit: 2\n    })\n}\n\nexport const putWhite2 = (cell1: number, cell2: number, props: any) => {\n    if (props.state.squares[cell1][cell2] !== \" \") {\n        return\n    }\n    const board = JSON.parse(JSON.stringify(props.state.squares))\n    let history = props.state.history\n    let historyCount: number = props.state.historyCount\n\n    board[cell1][cell2] = \"W\"\n    historyCount = historyCount + 1\n    history.push(board)\n\n    props.setState({\n        squares: board,\n        historyCount: historyCount,\n        history: history\n    })\n    console.log(history)\n    console.log(historyCount)\n}\n\n\nexport const completeEdit = (props: any) => {\n    props.setState({\n        isEdit: 0\n    })\n}\n\n"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAIC,KAAU,IAAK;EAChDC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EACzBF,KAAK,CAACG,QAAQ,CAAC;IACXC,MAAM,EAAE;EACZ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAa,EAAEC,KAAa,EAAEP,KAAU,KAAK;EACnE,IAAIA,KAAK,CAACQ,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,CAACC,KAAK,CAAC,KAAK,GAAG,EAAE;IAC3C;EACJ;EACA,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACb,KAAK,CAACQ,KAAK,CAACC,OAAO,CAAC,CAAC;EAC7D,IAAIK,OAAO,GAAGd,KAAK,CAACQ,KAAK,CAACM,OAAO;EACjC,IAAIC,YAAoB,GAAGf,KAAK,CAACQ,KAAK,CAACO,YAAY;EAEnDL,KAAK,CAACJ,KAAK,CAAC,CAACC,KAAK,CAAC,GAAG,GAAG;EACzBQ,YAAY,GAAGA,YAAY,GAAG,CAAC;EAC/BD,OAAO,CAACE,IAAI,CAACN,KAAK,CAAC;EAEnBV,KAAK,CAACG,QAAQ,CAAC;IACXM,OAAO,EAAEC,KAAK;IACdK,YAAY,EAAEA,YAAY;IAC1BD,OAAO,EAAEA;EACb,CAAC,CAAC;EACFb,OAAO,CAACC,GAAG,CAACY,OAAO,CAAC;EACpBb,OAAO,CAACC,GAAG,CAACa,YAAY,CAAC;AAC7B,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAIjB,KAAU,IAAK;EAChDA,KAAK,CAACG,QAAQ,CAAC;IACXC,MAAM,EAAE;EACZ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMc,SAAS,GAAG,CAACZ,KAAa,EAAEC,KAAa,EAAEP,KAAU,KAAK;EACnE,IAAIA,KAAK,CAACQ,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,CAACC,KAAK,CAAC,KAAK,GAAG,EAAE;IAC3C;EACJ;EACA,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACb,KAAK,CAACQ,KAAK,CAACC,OAAO,CAAC,CAAC;EAC7D,IAAIK,OAAO,GAAGd,KAAK,CAACQ,KAAK,CAACM,OAAO;EACjC,IAAIC,YAAoB,GAAGf,KAAK,CAACQ,KAAK,CAACO,YAAY;EAEnDL,KAAK,CAACJ,KAAK,CAAC,CAACC,KAAK,CAAC,GAAG,GAAG;EACzBQ,YAAY,GAAGA,YAAY,GAAG,CAAC;EAC/BD,OAAO,CAACE,IAAI,CAACN,KAAK,CAAC;EAEnBV,KAAK,CAACG,QAAQ,CAAC;IACXM,OAAO,EAAEC,KAAK;IACdK,YAAY,EAAEA,YAAY;IAC1BD,OAAO,EAAEA;EACb,CAAC,CAAC;EACFb,OAAO,CAACC,GAAG,CAACY,OAAO,CAAC;EACpBb,OAAO,CAACC,GAAG,CAACa,YAAY,CAAC;AAC7B,CAAC;AAGD,OAAO,MAAMI,YAAY,GAAInB,KAAU,IAAK;EACxCA,KAAK,CAACG,QAAQ,CAAC;IACXC,MAAM,EAAE;EACZ,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}